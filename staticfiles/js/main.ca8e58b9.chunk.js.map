{"version":3,"sources":["components/Header.module.css","components/drag and drop/PlayerBoard.module.css","components/drag and drop/PlayerBin.module.css","components/Teams/TeamTitle.module.css","components/Teams/TeamList.module.css","components/Teams/TeamPlayers.module.css","components/Header.js","components/Teams/TeamTitle.js","components/Teams/TeamList.js","components/Teams/TeamPlayers.js","components/drag and drop/PlayerBoard.js","components/drag and drop/PlayerBin.js","components/Teams/LeagueDisplay.js","App.js","index.js"],"names":["module","exports","Header","Navbar","className","styles","navbar","navbarCustom","expand","Container","style","color","userSelect","Toggle","TeamTitle","arrowIcon","selectedTeam","title","newAverage","initialAverage","marginBottom","marginLeft","classes","teamTitle","teamName","Row","marginTop","Col","md","fontSize","toFixed","TeamList","leagueTeams","handleSelectedTeam","droppableId","prompt","renderedTeams","map","team","index","Form","Select","dropDown","onChange","e","target","value","split","join","handleChange","TeamPlayers","teamData","renderedPlayers","id","useState","setTeam","useEffect","console","log","players","player","draggableId","playerId","provided","playerCard","ref","innerRef","draggableProps","dragHandleProps","sm","playerName","currentAverage","droppableProps","placeholder","PlayerBoard","selectedPlayers","setSelectedPlayers","selectedAverage","parseInt","totalPlayerScore","forEach","length","card","minHeight","marginRight","LeagueDisplay","setLeagueTeams","leaguePlayers","setLeaguePlayers","selectedHomeTeam","setSelectedHomeTeam","selectedAwayTeam","setSelectedAwayTeam","boardOnePlayers","setBoardOnePlayers","boardTwoPlayers","setBoardTwoPlayers","playerBinPlayers","setPlayerBinPlayers","initialHomeAverage","setInitialHomeAverage","initialAwayAverage","setInitialAwayAverage","newHomeAverage","setNewHomeAverage","newAwayAverage","setNewAwayAverage","getTeams","a","playersTemp","axios","get","result","data","concat","removeFromSourceBoard","removeFromBoard","source","sourceBoardPlayers","setSourcePlayers","currentBoardPlayers","splice","getTeamAverage","totalScore","removeFromTeamList","playerInfo","homeTeamPlayersTemp","filter","awayTeamPlayersTemp","selectedTeamName","selectedTeamInfo","teamNameComparison","onDragEnd","destination","find","Math","floor","boardOnePlayersTemp","boardTwoPlayersTemp","binPlayersTemp","homeTeamTemp","awayTeamTemp","PlayerBin","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca8e58b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Header_navbar__T39TS\",\"navbarCustom\":\"Header_navbarCustom__cqQFH\",\"navbar-brand\":\"Header_navbar-brand__2FdID\",\"navbar-text\":\"Header_navbar-text__20hnt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"PlayerBoard_card__2D3TO\",\"card-text\":\"PlayerBoard_card-text__1jxcQ\",\"playerCard\":\"PlayerBoard_playerCard__xPElS\",\"playerCardText\":\"PlayerBoard_playerCardText__2zohP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"PlayerBin_card__3MaTK\",\"card-text\":\"PlayerBin_card-text__2RNQK\",\"playerCard\":\"PlayerBin_playerCard__WmXjV\",\"playerCardText\":\"PlayerBin_playerCardText__35DiW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"teamTitle\":\"TeamTitle_teamTitle__38TGf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"team-name-card\":\"TeamList_team-name-card__2SCXi\",\"team-name-card-text\":\"TeamList_team-name-card-text__2EPNM\",\"dropDown\":\"TeamList_dropDown__3Nvfk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerCard\":\"TeamPlayers_playerCard__1z4md\",\"playerCardText\":\"TeamPlayers_playerCardText__O9Tup\",\"teamTitle\":\"TeamPlayers_teamTitle__9hBCV\"};","import { Container, Navbar } from 'react-bootstrap';\r\n\r\nimport styles from './Header.module.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <Navbar className={(styles.navbar, styles.navbarCustom)} expand=\"lg\">\r\n        <Container>\r\n          <h5 style={{ color: 'white', userSelect: 'none' }}>\r\n            Quest For The Belt\r\n          </h5>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\n\r\nimport { AiOutlineArrowUp, AiOutlineArrowDown } from 'react-icons/ai';\r\nimport classes from './TeamTitle.module.css';\r\n\r\nfunction TeamTitle({ selectedTeam, title, newAverage, initialAverage }) {\r\n  const arrowIcont = (\r\n    <AiOutlineArrowUp style={{ marginBottom: '5px', marginLeft: '5px' }} />\r\n  );\r\n  let arrowIcon;\r\n  if (newAverage !== initialAverage) {\r\n    arrowIcon =\r\n      newAverage > initialAverage ? (\r\n        <AiOutlineArrowUp\r\n          style={{ marginBottom: '5px', marginLeft: '5px', color: 'green' }}\r\n        />\r\n      ) : (\r\n        <AiOutlineArrowDown\r\n          style={{ marginBottom: '5px', marginLeft: '5px', color: 'red' }}\r\n        />\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3 className={classes.teamTitle}>\r\n        {selectedTeam ? selectedTeam.teamName : title}\r\n        {selectedTeam && (\r\n          <Row style={{ marginTop: '15px' }}>\r\n            <Col md={6}>\r\n              <h5>Team Avg</h5>\r\n              <h5 style={{ fontSize: '20px' }}>{initialAverage.toFixed(2)}</h5>\r\n            </Col>\r\n            <Col md={6}>\r\n              <h5>New Avg</h5>\r\n              <h5 style={{ fontSize: '20px' }}>\r\n                {newAverage.toFixed(2)} {arrowIcon}\r\n              </h5>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TeamTitle;\r\n","import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nimport styles from './TeamList.module.css';\r\n\r\nconst TeamList = ({\r\n  leagueTeams,\r\n  handleSelectedTeam,\r\n  droppableId,\r\n  prompt,\r\n  title,\r\n}) => {\r\n  const renderedTeams = leagueTeams.map((team, index) => {\r\n    return <option key={index}>{team.teamName}</option>;\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    let teamName = e.target.value;\r\n    teamName = teamName.split(' ').join('');\r\n    handleSelectedTeam(teamName);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form.Select\r\n        className={styles.dropDown}\r\n        aria-label=\"Default select example\"\r\n        onChange={(e) => {\r\n          handleChange(e);\r\n        }}\r\n      >\r\n        <option>{title}</option>\r\n        {renderedTeams}\r\n      </Form.Select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamList;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nimport classes from './TeamPlayers.module.css';\r\n\r\nconst TeamPlayers = ({ teamData, selectedTeam, id }) => {\r\n  const [team, setTeam] = useState(selectedTeam);\r\n  useEffect(() => {\r\n    setTeam(selectedTeam);\r\n  }, [selectedTeam]);\r\n\r\n  // for each player make the color of the card correlate with their average\r\n  // the higher the score the different the color\r\n  let renderedPlayers;\r\n  if (selectedTeam) {\r\n    console.log('teamRendering: ', team);\r\n    renderedPlayers = team.players.map((player, index) => {\r\n      return (\r\n        <Draggable\r\n          key={'' + player.playerId + id}\r\n          draggableId={'' + player.playerId + id}\r\n          index={index}\r\n        >\r\n          {(provided) => (\r\n            <div\r\n              className={classes.playerCard}\r\n              ref={provided.innerRef}\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n            >\r\n              <Row>\r\n                <Col sm={8}>\r\n                  <div>{player.playerName}</div>\r\n                </Col>\r\n                <Col>{player.currentAverage}</Col>\r\n              </Row>\r\n            </div>\r\n          )}\r\n        </Draggable>\r\n      );\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      <Row style={{ marginBottom: '5px' }}>\r\n        <Col sm={8}>Name</Col>\r\n        <Col>Current Avg</Col>\r\n      </Row>\r\n      <div>\r\n        <Droppable droppableId={'players' + id}>\r\n          {(provided) => (\r\n            <div {...provided.droppableProps} ref={provided.innerRef}>\r\n              {renderedPlayers}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamPlayers;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nimport classes from './PlayerBoard.module.css';\r\n\r\nfunction PlayerBoard({ id, players }) {\r\n  // here put the DragDrop context section inside the actual card instead of\r\n  // on the outside so that maybe onlt thie things in the middle move when dragging?\r\n  const [selectedPlayers, setSelectedPlayers] = useState(players);\r\n  useEffect(() => {\r\n    setSelectedPlayers(players);\r\n  }, [players]);\r\n\r\n  let renderedPlayers;\r\n  let selectedAverage = 0;\r\n\r\n  if (selectedPlayers) {\r\n    renderedPlayers = selectedPlayers.map((player, index) => {\r\n      return (\r\n        <Draggable\r\n          key={index + parseInt(id)}\r\n          draggableId={'' + player.playerId + id}\r\n          index={index}\r\n        >\r\n          {(provided) => (\r\n            <div\r\n              className={classes.playerCard}\r\n              ref={provided.innerRef}\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n            >\r\n              <Row>\r\n                <Col sm={8}>\r\n                  <div>{player.playerName}</div>\r\n                </Col>\r\n                <Col>{player.currentAverage}</Col>\r\n              </Row>\r\n            </div>\r\n          )}\r\n        </Draggable>\r\n      );\r\n    });\r\n    let totalPlayerScore = 0;\r\n    selectedPlayers.forEach((player) => {\r\n      totalPlayerScore += player.currentAverage;\r\n    });\r\n    selectedAverage = totalPlayerScore / selectedPlayers.length;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.card}>\r\n      <Droppable droppableId={'board' + id}>\r\n        {(provided) => (\r\n          <div\r\n            style={{ minHeight: '140px' }}\r\n            {...provided.droppableProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            {renderedPlayers}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n      <hr style={{ marginLeft: '10px', marginRight: '10px' }} />\r\n      {selectedAverage ? (\r\n        <p>\r\n          Avg: {selectedAverage.toFixed(2)} <br />\r\n        </p>\r\n      ) : (\r\n        <p>Avg: n/a</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayerBoard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nimport classes from './PlayerBin.module.css';\r\n\r\nfunction PlayerBoard({ id, players }) {\r\n  // here put the DragDrop context section inside the actual card instead of\r\n  // on the outside so that maybe onlt thie things in the middle move when dragging?\r\n  const [selectedPlayers, setSelectedPlayers] = useState(players);\r\n  useEffect(() => {\r\n    setSelectedPlayers(players);\r\n  }, [players]);\r\n\r\n  let renderedPlayers;\r\n\r\n  if (selectedPlayers) {\r\n    renderedPlayers = selectedPlayers.map((player, index) => {\r\n      return (\r\n        <Draggable\r\n          key={index + parseInt(id)}\r\n          draggableId={'' + player.playerId + id}\r\n          index={index}\r\n        >\r\n          {(provided) => (\r\n            <div\r\n              className={classes.playerCard}\r\n              ref={provided.innerRef}\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n            >\r\n              <Row>\r\n                <Col sm={8}>\r\n                  <div>{player.playerName}</div>\r\n                </Col>\r\n                <Col>{player.currentAverage}</Col>\r\n              </Row>\r\n            </div>\r\n          )}\r\n        </Draggable>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className={classes.card}>\r\n      <Droppable droppableId={'board' + id}>\r\n        {(provided) => (\r\n          <div\r\n            style={{ minHeight: '140px' }}\r\n            {...provided.droppableProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            {renderedPlayers}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayerBoard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport TeamTitle from './TeamTitle';\r\n\r\n// import classes from './LeagueDisplay.module.css';\r\n\r\nimport TeamList from './TeamList';\r\nimport TeamPlayers from './TeamPlayers';\r\nimport PlayerBoard from '../drag and drop/PlayerBoard';\r\nimport PlayerBin from '../drag and drop/PlayerBin';\r\n\r\nconst LeagueDisplay = () => {\r\n  const [leagueTeams, setLeagueTeams] = useState([]);\r\n  const [leaguePlayers, setLeaguePlayers] = useState([]);\r\n\r\n  const [selectedHomeTeam, setSelectedHomeTeam] = useState(null);\r\n  const [selectedAwayTeam, setSelectedAwayTeam] = useState(null);\r\n\r\n  const [boardOnePlayers, setBoardOnePlayers] = useState([]);\r\n  const [boardTwoPlayers, setBoardTwoPlayers] = useState([]);\r\n  const [playerBinPlayers, setPlayerBinPlayers] = useState([]);\r\n\r\n  const [initialHomeAverage, setInitialHomeAverage] = useState(0);\r\n  const [initialAwayAverage, setInitialAwayAverage] = useState(0);\r\n  const [newHomeAverage, setNewHomeAverage] = useState(0);\r\n  const [newAwayAverage, setNewAwayAverage] = useState(0);\r\n\r\n  // on render gets an array of the team names and players on each team sets it to league teams\r\n  useEffect(() => {\r\n    const getTeams = async () => {\r\n      let playersTemp = [];\r\n      const result = await axios.get('http://localhost:8000/api/leagueteams/');\r\n      console.log('api results: ', result.data);\r\n\r\n      // creates a list of all the players for getting any player data needed to display\r\n      result.data.forEach((team) => {\r\n        playersTemp = playersTemp.concat(team.players);\r\n      });\r\n      setLeaguePlayers(playersTemp);\r\n      setLeagueTeams(result.data);\r\n    };\r\n    getTeams();\r\n  }, []);\r\n\r\n  const handleDrop = (e) => {\r\n    if (!e.destination) return;\r\n    console.log(e);\r\n    // to get the player info, need to trim off the last digit in the draggableID\r\n    // the last digit is there to differentiate from duplicates in the player lists\r\n    // this is the reason for the math.floor below on the draggableId\r\n    const playerInfo = leaguePlayers.find(\r\n      (player) => player.playerId === Math.floor(e.draggableId / 10)\r\n    );\r\n\r\n    // if the user drop a player into the middle boards\r\n    if (e.destination.droppableId === 'board3') {\r\n      // need to spread out the array so it doesn't just pass to the reference\r\n      // but creates a new array so the component updates\r\n      const boardOnePlayersTemp = [...boardOnePlayers];\r\n      boardOnePlayersTemp.splice(e.destination.index, 0, playerInfo);\r\n      setBoardOnePlayers(boardOnePlayersTemp);\r\n\r\n      // if the user picked player from a team lists\r\n      removeFromTeamList(\r\n        e,\r\n        selectedHomeTeam,\r\n        playerInfo,\r\n        setSelectedHomeTeam,\r\n        selectedAwayTeam,\r\n        setSelectedAwayTeam\r\n      );\r\n      //if the user picked a player from board list\r\n      // removes the picked up player from the board\r\n      removeFromSourceBoard(e, removeFromBoard);\r\n    } else if (e.destination.droppableId === 'board4') {\r\n      const boardTwoPlayersTemp = [...boardTwoPlayers];\r\n      boardTwoPlayersTemp.splice(e.destination.index, 0, playerInfo);\r\n      setBoardTwoPlayers(boardTwoPlayersTemp);\r\n\r\n      // if the user picked player from a team lists\r\n      removeFromTeamList(\r\n        e,\r\n        selectedHomeTeam,\r\n        playerInfo,\r\n        setSelectedHomeTeam,\r\n        selectedAwayTeam,\r\n        setSelectedAwayTeam\r\n      );\r\n      removeFromSourceBoard(e, removeFromBoard);\r\n    } else if (e.destination.droppableId === 'board5') {\r\n      const binPlayersTemp = [...playerBinPlayers];\r\n      binPlayersTemp.splice(e.destination.index, 0, playerInfo);\r\n      setPlayerBinPlayers(binPlayersTemp);\r\n      removeFromTeamList(\r\n        e,\r\n        selectedHomeTeam,\r\n        playerInfo,\r\n        setSelectedHomeTeam,\r\n        selectedAwayTeam,\r\n        setSelectedAwayTeam\r\n      );\r\n      removeFromSourceBoard(e, removeFromBoard);\r\n    } else if (e.destination.droppableId === 'players1') {\r\n      // spread out object to create a new one not just a reference for\r\n      // proper re render\r\n      const homeTeamTemp = { ...selectedHomeTeam };\r\n      homeTeamTemp.players.splice(e.destination.index, 0, playerInfo);\r\n      setSelectedHomeTeam(homeTeamTemp);\r\n      removeFromTeamList(\r\n        e,\r\n        selectedHomeTeam,\r\n        playerInfo,\r\n        setSelectedHomeTeam,\r\n        selectedAwayTeam,\r\n        setSelectedAwayTeam\r\n      );\r\n      removeFromSourceBoard(e, removeFromBoard);\r\n    } else if (e.destination.droppableId === 'players2') {\r\n      // spread out object to create a new one not just a reference for\r\n      // proper re render\r\n      const awayTeamTemp = { ...selectedAwayTeam };\r\n      awayTeamTemp.players.splice(e.destination.index, 0, playerInfo);\r\n      setSelectedAwayTeam(awayTeamTemp);\r\n      removeFromTeamList(\r\n        e,\r\n        selectedHomeTeam,\r\n        playerInfo,\r\n        setSelectedHomeTeam,\r\n        selectedAwayTeam,\r\n        setSelectedAwayTeam\r\n      );\r\n      removeFromSourceBoard(e, removeFromBoard);\r\n    }\r\n  };\r\n\r\n  function removeFromSourceBoard(e, removeFromBoard) {\r\n    if (e.source.droppableId === 'board3') {\r\n      removeFromBoard(e, boardOnePlayers, setBoardOnePlayers);\r\n    } else if (e.source.droppableId === 'board4') {\r\n      removeFromBoard(e, boardTwoPlayers, setBoardTwoPlayers);\r\n    } else if (e.source.droppableId === 'board5') {\r\n      removeFromBoard(e, playerBinPlayers, setPlayerBinPlayers);\r\n    }\r\n  }\r\n  // removes the player from the board list when dragging out\r\n  const removeFromBoard = (e, sourceBoardPlayers, setSourcePlayers) => {\r\n    // removes the player from the board list that the user got it from\r\n    const currentBoardPlayers = [...sourceBoardPlayers];\r\n    currentBoardPlayers.splice(e.source.index, 1);\r\n    setSourcePlayers(currentBoardPlayers);\r\n    if (selectedHomeTeam) setNewHomeAverage(getTeamAverage(selectedHomeTeam));\r\n    if (selectedAwayTeam) setNewAwayAverage(getTeamAverage(selectedAwayTeam));\r\n  };\r\n\r\n  // creates the new average for the players that have moved around on the list\r\n  const getTeamAverage = (team) => {\r\n    console.log('team after drag: ', team);\r\n    let totalScore = 0;\r\n    team.players.forEach((player) => {\r\n      totalScore += player.currentAverage;\r\n    });\r\n    const newTeamAverage = totalScore / team.players.length;\r\n    return newTeamAverage;\r\n  };\r\n\r\n  // callback function for handling when user clicks on the team,\r\n  // this function then gets the relevant object from the teams array\r\n  // and passes it through to the teamplayers display compoenent\r\n  const handleSelectedHomeTeam = (selectedTeamName) => {\r\n    const selectedTeamInfo = leagueTeams.filter((team) => {\r\n      const teamTotalAverage = [];\r\n      let teamNameComparison = team.teamName;\r\n      teamNameComparison = teamNameComparison.split(' ').join('');\r\n      return teamNameComparison === selectedTeamName;\r\n    });\r\n    setSelectedHomeTeam(selectedTeamInfo[0]);\r\n    setInitialHomeAverage(getTeamAverage(selectedTeamInfo[0]));\r\n    setNewHomeAverage(getTeamAverage(selectedTeamInfo[0]));\r\n  };\r\n\r\n  const handleSelectedAwayTeam = (selectedTeamName) => {\r\n    console.log('team name passed in: ', selectedTeamName);\r\n    const selectedTeamInfo = leagueTeams.filter((team) => {\r\n      const teamTotalAverage = [];\r\n      let teamNameComparison = team.teamName;\r\n      teamNameComparison = teamNameComparison.split(' ').join('');\r\n      return teamNameComparison === selectedTeamName;\r\n    });\r\n    console.log(selectedTeamInfo[0].players);\r\n    setSelectedAwayTeam(selectedTeamInfo[0]);\r\n    setInitialAwayAverage(getTeamAverage(selectedTeamInfo[0]));\r\n    setNewAwayAverage(getTeamAverage(selectedTeamInfo[0]));\r\n  };\r\n\r\n  // removes the player from the team that the user\r\n  // dragged them from\r\n  function removeFromTeamList(\r\n    e,\r\n    selectedHomeTeam,\r\n    playerInfo,\r\n    setSelectedHomeTeam,\r\n    selectedAwayTeam,\r\n    setSelectedAwayTeam\r\n  ) {\r\n    if (e.source.droppableId === 'players1') {\r\n      // removes the player from the home team\r\n      const homeTeamPlayersTemp = selectedHomeTeam;\r\n      homeTeamPlayersTemp.players = homeTeamPlayersTemp.players.filter(\r\n        (player) => player.playerId !== playerInfo.playerId\r\n      );\r\n      setSelectedHomeTeam(homeTeamPlayersTemp);\r\n      if (selectedHomeTeam) setNewHomeAverage(getTeamAverage(selectedHomeTeam));\r\n      if (selectedAwayTeam) setNewAwayAverage(getTeamAverage(selectedAwayTeam));\r\n    } else if (e.source.droppableId === 'players2') {\r\n      // removes the player from the away team\r\n      const awayTeamPlayersTemp = selectedAwayTeam;\r\n      awayTeamPlayersTemp.players = awayTeamPlayersTemp.players.filter(\r\n        (player) => player.playerId !== playerInfo.playerId\r\n      );\r\n      setSelectedAwayTeam(awayTeamPlayersTemp);\r\n      if (selectedHomeTeam) setNewHomeAverage(getTeamAverage(selectedHomeTeam));\r\n      if (selectedAwayTeam) setNewAwayAverage(getTeamAverage(selectedAwayTeam));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col md={6}>\r\n          <TeamList\r\n            title={'Your Team'}\r\n            leagueTeams={leagueTeams}\r\n            handleSelectedTeam={handleSelectedHomeTeam}\r\n          ></TeamList>\r\n        </Col>\r\n        <Col md={6}>\r\n          <TeamList\r\n            title={'Opponents Team'}\r\n            leagueTeams={leagueTeams}\r\n            handleSelectedTeam={handleSelectedAwayTeam}\r\n          ></TeamList>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <DragDropContext onDragEnd={handleDrop}>\r\n          <Col md={4}>\r\n            <TeamTitle\r\n              selectedTeam={selectedHomeTeam}\r\n              title=\"Your Team\"\r\n              initialAverage={initialHomeAverage}\r\n              newAverage={newHomeAverage}\r\n            />\r\n\r\n            {selectedHomeTeam && (\r\n              <TeamPlayers\r\n                teamData={leagueTeams}\r\n                selectedTeam={selectedHomeTeam}\r\n                id={'1'}\r\n              ></TeamPlayers>\r\n            )}\r\n          </Col>\r\n          <Col md={4}>\r\n            <PlayerBoard players={boardOnePlayers} id={'3'}></PlayerBoard>\r\n            <PlayerBoard players={boardTwoPlayers} id={'4'}></PlayerBoard>\r\n            <PlayerBin players={playerBinPlayers} id={'5'}></PlayerBin>\r\n          </Col>\r\n          <Col md={4}>\r\n            <TeamTitle\r\n              selectedTeam={selectedAwayTeam}\r\n              title=\"Opponent's Team\"\r\n              initialAverage={initialAwayAverage}\r\n              newAverage={newAwayAverage}\r\n            />\r\n\r\n            {selectedAwayTeam && (\r\n              <TeamPlayers\r\n                teamData={leagueTeams}\r\n                selectedTeam={selectedAwayTeam}\r\n                id={'2'}\r\n              ></TeamPlayers>\r\n            )}\r\n          </Col>\r\n        </DragDropContext>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeagueDisplay;\r\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport './App.css';\n\nimport Header from './components/Header';\nimport LeagueDisplay from './components/Teams/LeagueDisplay';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Header />\n        <Container>\n          <LeagueDisplay />\n        </Container>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}